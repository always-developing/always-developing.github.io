<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>consumer on Always Developing</title><link>https://always-developing.github.io/tags/consumer/</link><description>Recent content in consumer on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 10 Feb 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/consumer/index.xml" rel="self" type="application/rss+xml"/><item><title>C# Channels - Produce &amp; Consume data</title><link>https://always-developing.github.io/dailydrop/2022/02/10-channels/</link><pubDate>Thu, 10 Feb 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/02/10-channels/</guid><description>Daily Knowledge Drop Today we dive into a little-known C# feature, I&amp;rsquo;d previously never heard about called Channels.
So what is a channel? - In short, a channel is a feature which allows for passing of data between a producer and consumer(s). It is an efficient, thread-safe queuing mechanism.
Usage The examples set out below are very simple, and do not reflect a real world scenario. They have eben kept as minimal as possible to display the core concepts of the Channel.</description></item></channel></rss>