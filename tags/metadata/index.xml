<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>metadata on Always Developing</title><link>https://always-developing.github.io/tags/metadata/</link><description>Recent content in metadata on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Fri, 11 Feb 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/metadata/index.xml" rel="self" type="application/rss+xml"/><item><title>Extract calling method metadata with C#</title><link>https://always-developing.github.io/dailydrop/2022/02/11-caller-metadata/</link><pubDate>Fri, 11 Feb 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/02/11-caller-metadata/</guid><description>Daily Knowledge Drop As part of the C# System.Runtime assembly, there are a number of Attributes which can be used to get information about the caller of a method.
The pattern for usage is the same for all attributes. To extract the metadata when a method is called, the following needs to be done:
A new parameter needs to be added to the method (the type of the parameter depends on the attribute, see examples below) The new parameter must have a default value The new parameter must be decorated with the relevant Attribute Attributes Lets look at a few examples.</description></item></channel></rss>