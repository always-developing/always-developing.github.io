<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>methods on Always Developing</title><link>https://always-developing.github.io/tags/methods/</link><description>Recent content in methods on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 24 Mar 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/methods/index.xml" rel="self" type="application/rss+xml"/><item><title>Indices and ranges</title><link>https://always-developing.github.io/dailydrop/2022/03/24-indices-ranges/</link><pubDate>Thu, 24 Mar 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/03/24-indices-ranges/</guid><description>Daily Knowledge Drop C#8, first introduced with .NET Core 3, added support for indices and ranges, which provide a succinct syntax for accessing single elements or ranges in a sequence.
Two new operators were introduced to support this functionality:
^: The index from end operator ..: The range operator ^ operator The new ^ operator is an index from end operator, which specifies that an index is relative to the end of the sequence.</description></item><item><title>Using Func&lt;> as an intermediary</title><link>https://always-developing.github.io/dailydrop/2022/03/23-func-as-intermediary/</link><pubDate>Wed, 23 Mar 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/03/23-func-as-intermediary/</guid><description>Daily Knowledge Drop A Func (or Action) can be used as an intermediary to keep code cleaner when dealing with multiple methods or delegates of the same signature.
The setup The root of this post stems from a real-world situation I&amp;rsquo;d encountered. The examples below will be a simplified example of the situation but the setup is as follows:
A handler is obtained from the dependency injection container A collection of none or many interceptors are obtained from the dependency injection container If no interceptors are obtained, then Invoke a HandleOperation method on the handler If any interceptors are obtained, then build up a &amp;ldquo;pipeline&amp;rdquo; of all interceptors and then the handler at the end of the pipeline.</description></item></channel></rss>