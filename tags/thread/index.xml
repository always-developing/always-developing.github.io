<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>thread on Always Developing</title><link>https://always-developing.github.io/tags/thread/</link><description>Recent content in thread on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 07 Apr 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing multi-thread access with ReaderWriterLockSlim</title><link>https://always-developing.github.io/dailydrop/2022/04/07-readerwriterlockslim/</link><pubDate>Thu, 07 Apr 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/04/07-readerwriterlockslim/</guid><description>Daily Knowledge Drop The ReaderWriterLockSlim class can be used to allow multiple threads to read a resource, while only allowing one thread to write to a resource.
In a previous Daily Drop post we looked at how the Interlocked can be used to lock a resource - ReaderWriterLockSlim is similar to this, but allows for finer control over how the resource is locked.
Base setup In the setup, we have a Price class which stores a price.</description></item></channel></rss>