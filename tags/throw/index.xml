<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>throw on Always Developing</title><link>https://always-developing.github.io/tags/throw/</link><description>Recent content in throw on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 28 Apr 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/throw/index.xml" rel="self" type="application/rss+xml"/><item><title>Using throw expressions in C#</title><link>https://always-developing.github.io/dailydrop/2022/04/28-throw-expressions/</link><pubDate>Thu, 28 Apr 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/04/28-throw-expressions/</guid><description>Daily Knowledge Drop Throw expressions, introduced in C#7, enabled throw to be used as an expression as well as a statement. This allowed throw to be used in contexts which previously where not supported, specifically:
Conditional operator Null-coalescing expression Expression-bodied method Examples 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Song { public string Name { get; set; } public string Artist { get; set; } public Song(string name) =&amp;gt; Name = name ?</description></item></channel></rss>