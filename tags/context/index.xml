<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>context on Always Developing</title><link>https://always-developing.github.io/tags/context/</link><description>Recent content in context on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Sat, 11 Dec 2021 03:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/context/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic Context (for Entity Framework Core)</title><link>https://always-developing.github.io/p/11-2020-dynamic-context/</link><pubDate>Sat, 11 Dec 2021 03:00:00 +0200</pubDate><guid>https://always-developing.github.io/p/11-2020-dynamic-context/</guid><description>The problem Entity Framework Core is a great go-to ORM for .NET, for any type of application provides almost all the functionality required to do successful database access out the box.
However, there are two use cases, specifically with regards to retrieval of data, it doesn&amp;rsquo;t cater for - this post and the accompanying code sample/NuGet package attempts to provides solutions for these use cases.
First, the setup - an EF DbContext which has one DbSet, for storing Blogs (the below is a standard DbContext configuration):</description></item></channel></rss>