<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>failfast on Always Developing</title><link>https://always-developing.github.io/tags/failfast/</link><description>Recent content in failfast on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Wed, 04 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/failfast/index.xml" rel="self" type="application/rss+xml"/><item><title>Environment.FailFast</title><link>https://always-developing.github.io/dailydrop/2022/05/04-failfast/</link><pubDate>Wed, 04 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/04-failfast/</guid><description>Daily Knowledge Drop The Environment.FaiFast method can be used to close an application without calling any finally blocks or finalizers.
FailFast sample In the below simple example, the application will try save a record to the database:
if a non-connectivity related exception occurs, the error message is saved to the database. On exit of the code block (in the finally), a information message is also logged to the database if a connectivity related exception occurs, the system is obviously unable to save the exception to the database.</description></item></channel></rss>