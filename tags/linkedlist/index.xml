<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linkedlist on Always Developing</title><link>https://always-developing.github.io/tags/linkedlist/</link><description>Recent content in linkedlist on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Mon, 04 Apr 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/linkedlist/index.xml" rel="self" type="application/rss+xml"/><item><title>Linked Lists in C#</title><link>https://always-developing.github.io/dailydrop/2022/04/04-linked-list/</link><pubDate>Mon, 04 Apr 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/04/04-linked-list/</guid><description>Daily Knowledge Drop There is a built in Linked List implementation in C#, which can be used in certain situations to improve performance.
What is a Linked List? A linked list is a general, linear data structure containing multiple elements, where the elements are linked to each other via pointers (the memory address of the element)
The C# implementation of a linked list is a double linked list, meaning each element points to the element in front of it in the list, as well as the element behind it in the lis (vs each element only pointing to the element in front of it in the list)</description></item></channel></rss>