<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>exception on Always Developing</title><link>https://always-developing.github.io/tags/exception/</link><description>Recent content in exception on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Mon, 14 Feb 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/exception/index.xml" rel="self" type="application/rss+xml"/><item><title>Filtering try-catch statement</title><link>https://always-developing.github.io/dailydrop/2022/02/14-exceptions-when/</link><pubDate>Mon, 14 Feb 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/02/14-exceptions-when/</guid><description>Daily Knowledge Drop It is possible to filter the catch portion of the try-catch statement, as well as catch multiple exceptions at the same time using the C# when keyword.
Multiple exceptions In our use case, there are two exception types we are particularly interested in IndexOutOfRangeException and DivideByZeroException.
If either of these exceptions occur, we want to log the exception, and carry on with the workflow. However if any other exception occurs, it should be logged and re-thrown to be handled higher up the call stack.</description></item></channel></rss>