<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>contravariance on Always Developing</title><link>https://always-developing.github.io/tags/contravariance/</link><description>Recent content in contravariance on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Fri, 18 Mar 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/contravariance/index.xml" rel="self" type="application/rss+xml"/><item><title>Covariance and Contravariance in C#</title><link>https://always-developing.github.io/dailydrop/2022/03/18-co-contravariance/</link><pubDate>Fri, 18 Mar 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/03/18-co-contravariance/</guid><description>Daily Knowledge Drop The way in which base and inherited classes can automatically be cast up or down the hierarchy (depending on the situation) is referred to covariance and contravariance.
Most developers have probably used the concepts of covariance and contravariance in their code, perhaps without even realising it. Looking at a some examples, will help explain in a bit more detail.
Base setup In the examples below, the following hierarchy of classes is used:</description></item></channel></rss>