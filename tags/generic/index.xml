<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>generic on Always Developing</title><link>https://always-developing.github.io/tags/generic/</link><description>Recent content in generic on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Tue, 31 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/generic/index.xml" rel="self" type="application/rss+xml"/><item><title>Generic attributes with C#11</title><link>https://always-developing.github.io/dailydrop/2022/05/31-generic-attribute/</link><pubDate>Tue, 31 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/31-generic-attribute/</guid><description>Daily Knowledge Drop Coming in C# 11 (later this year with .NET 7) is the generic attributes feature - the ability to define an attribute which takes a generic parameter. This is a more convenient style for attributes which require a Type parameter.
Generic attribute code samples below were written using the .NET 7 preview release.
Pre C# 11 - Type parameter Sometimes an attribute needs to take a Type parameter - currently (using any version prior to C# 11) the only way to do this is passing a Type parameter to the constructor.</description></item></channel></rss>