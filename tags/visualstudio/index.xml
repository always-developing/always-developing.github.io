<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>visualstudio on Always Developing</title><link>https://always-developing.github.io/tags/visualstudio/</link><description>Recent content in visualstudio on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 12 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/visualstudio/index.xml" rel="self" type="application/rss+xml"/><item><title>Rectangle text selection in Visual Studio</title><link>https://always-developing.github.io/dailydrop/2022/05/12-vs-rectangle-selection/</link><pubDate>Thu, 12 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/12-vs-rectangle-selection/</guid><description>Daily Knowledge Drop Holding down the alt key while performing a text selection with the cursor in Visual Studio will allow for a rectangular selection.
Example The best use case for this feature, is copying commented out code (there are of course many other use cases). For example:
1 2 3 4 5 6 7 public void LoopAndOutput(int iterations) { //for(int i = 0; i &amp;lt; iterations; i++) //{ // Console.</description></item><item><title>Error and warning preprocessor directives</title><link>https://always-developing.github.io/dailydrop/2022/05/09-preprocessor-directives/</link><pubDate>Mon, 09 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/09-preprocessor-directives/</guid><description>Daily Knowledge Drop There are a number of C# directives which can be used to instruct the compiler to generate user-defined errors and warnings as well as control line information:
#error #warning #line #error The #error directive can be used to generate a compiler error with a specific message.
Suppose (for no good reason I can think of), the below code should only be executed when in Release build configuration:</description></item><item><title>Multi-statement line breakpoints</title><link>https://always-developing.github.io/dailydrop/2022/05/06-breakpoint-shortcut/</link><pubDate>Fri, 06 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/06-breakpoint-shortcut/</guid><description>Daily Knowledge Drop When a line of code contains multiple statements, the Toggle Breakpoint shortcut F9, in combination with the I-beam position, can be used to create a breakpoint on a single statement in the line.
This post refers to Visual Studio functionality - the experience might differ with other IDEs.
The problem When a single line contains multiple statements, creating a breakpoint by clicking in the row margin creates a breakpoint on the entire line.</description></item><item><title>Useful Visual Studio keyboard shortcuts</title><link>https://always-developing.github.io/p/vs-keyboard-shortcuts/</link><pubDate>Mon, 25 Oct 2021 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/p/vs-keyboard-shortcuts/</guid><description>Why learn keyboard shortcuts? So I confess I have no empirical evidence to backup the up to 20% more productive claim. That number is just made up, but with years of experience on my side, it honestly feels fairly accurate to me!
Having often been involved in assisting, troubleshooting and debugging code with fellow developers, it is apparent that the developers which are familiar with their IDE, and make use of the shortcuts, generally (but not always!</description></item></channel></rss>