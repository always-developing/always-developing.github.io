<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>biginteger on Always Developing</title><link>https://always-developing.github.io/tags/biginteger/</link><description>Recent content in biginteger on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Mon, 16 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/biginteger/index.xml" rel="self" type="application/rss+xml"/><item><title>Catering for big numbers with BigInteger</title><link>https://always-developing.github.io/dailydrop/2022/05/16-biginteger/</link><pubDate>Mon, 16 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/16-biginteger/</guid><description>Daily Knowledge Drop In C#, the int integral type has a maximum and minimum value of 2,147,483,647 and -2,147,483,648 respectively. Going outside of these bounds will result in inaccurate output.
The BigInteger struct is an immutable type, which has no upper or lower bounds - and this can store values outside those of int.
int It was touched upon the the &amp;ldquo;checked and unchecked keywords&amp;rdquo; post, but lets have a look at what happens when going outside the limits of an int:</description></item></channel></rss>