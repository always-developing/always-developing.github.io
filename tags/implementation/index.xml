<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>implementation on Always Developing</title><link>https://always-developing.github.io/tags/implementation/</link><description>Recent content in implementation on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Sat, 06 Nov 2021 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/implementation/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiple implementations of same interface - the options</title><link>https://always-developing.github.io/p/multiple-implementations/</link><pubDate>Sat, 06 Nov 2021 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/p/multiple-implementations/</guid><description>The challenge Consider a scenario where the requirement is to upload a file to an online provider (AWS S3, Azure Blob or a FTP site in the examples below), where the provider can be easily changed (either dynamically at runtime, or easily with minimal code changes), with the possibility additional providers being added in future.
To make use of dependency injection, a generic interface is created, IFileUploader, along with three implementations AWSUploader, AzureUploader and FTPUploader.</description></item></channel></rss>