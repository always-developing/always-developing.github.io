<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>disposable on Always Developing</title><link>https://always-developing.github.io/tags/disposable/</link><description>Recent content in disposable on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 17 Feb 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/disposable/index.xml" rel="self" type="application/rss+xml"/><item><title>Using with IDisposable</title><link>https://always-developing.github.io/dailydrop/2022/02/17-using-idisposable/</link><pubDate>Thu, 17 Feb 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/02/17-using-idisposable/</guid><description>Daily Knowledge Drop To make use of the using statement in C#, all you need to do is implement the IDisposable interface on a class.
The using statement provides a convenient syntax to ensure the correct use of IDisposable objects. The object in question will exists for the scope of the using and then automatically be disposed once out of scope.
This functionality can also be leveraged to create scoped helper instances for certain use cases.</description></item></channel></rss>