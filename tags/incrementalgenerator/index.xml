<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>incrementalgenerator on Always Developing</title><link>https://always-developing.github.io/tags/incrementalgenerator/</link><description>Recent content in incrementalgenerator on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Fri, 04 Mar 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/incrementalgenerator/index.xml" rel="self" type="application/rss+xml"/><item><title>Incremental source generators</title><link>https://always-developing.github.io/dailydrop/2022/03/04-incremental-generator/</link><pubDate>Fri, 04 Mar 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/03/04-incremental-generator/</guid><description>Daily Knowledge Drop Incremental source generators can be used to generated fixed code, which can be used in user code, which can then be used by the source generator to generate additional code.
This is done through the usage of RegisterPostInitializationOutput available to incremental generators.
This will make more sense as we look at an example. This example below is an extension of the example in last week&amp;rsquo;s &amp;ldquo;emitting source generated files&amp;rdquo; post.</description></item></channel></rss>