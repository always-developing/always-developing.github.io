<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ienumerable on Always Developing</title><link>https://always-developing.github.io/tags/ienumerable/</link><description>Recent content in ienumerable on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Thu, 26 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/ienumerable/index.xml" rel="self" type="application/rss+xml"/><item><title>IEnumerable count without enumeration</title><link>https://always-developing.github.io/dailydrop/2022/05/26-trygetnonenumeratedcount/</link><pubDate>Thu, 26 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/26-trygetnonenumeratedcount/</guid><description>Daily Knowledge Drop The TryGetNonEnumeratedCount method (introduced in .NET6) can be used to attempt to determine the number of elements in a sequence without forcing an enumeration over the sequence.
Some implementations of IEnumerable&amp;lt;&amp;gt; can have the count determined without enumerating over all the items, while other implementations require an enumeration. TryGetNonEnumeratedCount will perform a series of type tests, identifying common types whose count can be determined without enumerating.
Example Consider the following sample - first, a method which will return an IEnumerable&amp;lt;string&amp;gt; of shipping options:</description></item></channel></rss>