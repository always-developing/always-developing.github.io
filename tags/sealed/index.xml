<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sealed on Always Developing</title><link>https://always-developing.github.io/tags/sealed/</link><description>Recent content in sealed on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Fri, 29 Apr 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/sealed/index.xml" rel="self" type="application/rss+xml"/><item><title>Sealed class performance</title><link>https://always-developing.github.io/dailydrop/2022/04/29-sealed-performance/</link><pubDate>Fri, 29 Apr 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/04/29-sealed-performance/</guid><description>Daily Knowledge Drop There are a number of situations in which performance gains can be had by marking a class as sealed.
Sealed class A sealed class is a class (marked with the sealed keyword) which cannot be inherited from. If the intention is to not have a class available for inheritance (probably the majority of classes by default) the class should be marked as sealed to prevent unwanted effects of it being inherited - but there is the benefit of some performance improvements.</description></item></channel></rss>