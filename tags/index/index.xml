<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>index on Always Developing</title><link>https://always-developing.github.io/tags/index/</link><description>Recent content in index on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Tue, 03 May 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/index/index.xml" rel="self" type="application/rss+xml"/><item><title>Index initializer behavior</title><link>https://always-developing.github.io/dailydrop/2022/05/03-index-initializer/</link><pubDate>Tue, 03 May 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/05/03-index-initializer/</guid><description>Daily Knowledge Drop The index initialization style of collection initialization has slightly different (but important) behavior to that of the &amp;ldquo;traditional&amp;rdquo; initialization method.
Initialization Let&amp;rsquo;s look at a few different ways a Dictionary&amp;lt;int, string&amp;gt; can be initialized, and have 5 values set:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // initialize a empty dictionary, then add the values var normalDictionary = new Dictionary&amp;lt;int, string&amp;gt;(); normalDictionary.</description></item></channel></rss>