<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>validity on Always Developing</title><link>https://always-developing.github.io/tags/validity/</link><description>Recent content in validity on Always Developing</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><lastBuildDate>Mon, 14 Mar 2022 01:00:00 +0200</lastBuildDate><atom:link href="https://always-developing.github.io/tags/validity/index.xml" rel="self" type="application/rss+xml"/><item><title>Enum validity with IsDefined</title><link>https://always-developing.github.io/dailydrop/2022/03/14-enum-isdefined/</link><pubDate>Mon, 14 Mar 2022 01:00:00 +0200</pubDate><guid>https://always-developing.github.io/dailydrop/2022/03/14-enum-isdefined/</guid><description>Daily Knowledge Drop There is a helper IsDefined method on the Enum class, which will check if a numerical value is valid for a specific enum type.
IsDefined method Assume an enum is defined as below:
1 2 3 4 5 6 7 public enum Direction { North, East, South, West } The IsDefined can be invoked as follows:
1 2 3 4 bool IsEnumDefined(int direction) { return Enum.IsDefined(typeof(Direction), direction); } The method takes in the enum type, as well as the numerical value and validates if the enum defines a value for the numerical value.</description></item></channel></rss>